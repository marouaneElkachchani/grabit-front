[{"/Users/gemography/Documents/projects/grabit-front/src/index.js":"1","/Users/gemography/Documents/projects/grabit-front/src/reportWebVitals.js":"2","/Users/gemography/Documents/projects/grabit-front/src/components/App/App.js":"3","/Users/gemography/Documents/projects/grabit-front/src/components/LandingPage/LandingPage.js":"4","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/index.js":"5","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/reportWebVitals.js":"6","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/App/App.js":"7","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/LandingPage/LandingPage.js":"8","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/Profile/Profile.js":"9","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/OrderRequest/OrderRequest.js":"10","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Footer/Footer.js":"11","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/TopBanner/TopBanner.js":"12","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Requests/Requests.js":"13","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/SideBar/SideBar.js":"14","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Address/Address.js":"15","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/ProfileSettings/ProfileSettings.js":"16","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Root/Root.js":"17","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages-v1/Profile-v1/Profile-v1.js":"18","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/TopBanner-v1/TopBanner-v1.js":"19","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/queries/fetchRequests.js":"20","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/queries/fetchUserInfo.js":"21","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/SignIn/SignIn.js":"22","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/SignUp/SignUp.js":"23"},{"size":520,"mtime":1608807282195,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1607949809325,"results":"26","hashOfConfig":"25"},{"size":277,"mtime":1608723977102,"results":"27","hashOfConfig":"25"},{"size":4783,"mtime":1608809944113,"results":"28","hashOfConfig":"25"},{"size":474,"mtime":1616511974487,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1607949808000,"results":"31","hashOfConfig":"30"},{"size":1940,"mtime":1617280516677,"results":"32","hashOfConfig":"30"},{"size":6029,"mtime":1617280348514,"results":"33","hashOfConfig":"30"},{"size":2063,"mtime":1615387538218,"results":"34","hashOfConfig":"30"},{"size":11362,"mtime":1617118677141,"results":"35","hashOfConfig":"30"},{"size":676,"mtime":1610017610104,"results":"36","hashOfConfig":"30"},{"size":2384,"mtime":1615472491295,"results":"37","hashOfConfig":"30"},{"size":1342,"mtime":1617276624260,"results":"38","hashOfConfig":"30"},{"size":1713,"mtime":1616671001924,"results":"39","hashOfConfig":"30"},{"size":2325,"mtime":1617276610283,"results":"40","hashOfConfig":"30"},{"size":3718,"mtime":1617276657842,"results":"41","hashOfConfig":"30"},{"size":1370,"mtime":1617276259956,"results":"42","hashOfConfig":"30"},{"size":1813,"mtime":1617276676476,"results":"43","hashOfConfig":"30"},{"size":2325,"mtime":1617118378054,"results":"44","hashOfConfig":"30"},{"size":585,"mtime":1616670207245,"results":"45","hashOfConfig":"30"},{"size":181,"mtime":1617276247300,"results":"46","hashOfConfig":"30"},{"size":3621,"mtime":1617118235367,"results":"47","hashOfConfig":"30"},{"size":5754,"mtime":1617270184913,"results":"48","hashOfConfig":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"wdmy2v",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1xa8tuc",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/gemography/Documents/projects/grabit-front/src/index.js",[],["104","105"],"/Users/gemography/Documents/projects/grabit-front/src/reportWebVitals.js",[],"/Users/gemography/Documents/projects/grabit-front/src/components/App/App.js",[],"/Users/gemography/Documents/projects/grabit-front/src/components/LandingPage/LandingPage.js",["106","107","108","109","110","111"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/index.js",[],["112","113"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/reportWebVitals.js",[],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/App/App.js",[],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/LandingPage/LandingPage.js",["114"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/Profile/Profile.js",["115"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/OrderRequest/OrderRequest.js",["116","117","118"],"import React from 'react'\nimport './OrderRequest.css'\nimport { Link } from 'react-router-dom'\nimport TopBannerV1 from '../../TopBanner-v1/TopBanner-v1'\nimport Footer from '../../Footer/Footer'\nimport ovalDsa from './assets/oval-dsa.png'\nimport ovalAddress from './assets/oval-address.png'\nimport ovalAsd from './assets/oval-asd.png'\nimport add from './assets/add.png'\nimport deleteItem from './assets/remove-item.png'\n\nimport gql from 'graphql-tag'\nimport { graphql } from 'react-apollo'\nimport query from '../../../queries/fetchRequests'\n\nclass OrderRequest extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            description: \"\",\n            item: \"\",\n            items: [],\n            date: \"\",\n            schedule: \"ASAP\",\n            costRange: {from: 0, to: 0},\n            addressDeparture: \"\",\n            deliveryAddress: \"\"\n        }\n        this.addItem = this.addItem.bind(this)\n        this.deleteItem = this.deleteItem.bind(this)\n        this.renderItems = this.renderItems.bind(this)\n    }\n\n    addItem() {\n        if(this.state.item) {\n            this.setState(prevState => ({\n                items: [{name: this.state.item}, ...prevState.items],\n                item: \"\"\n              }))\n        }\n    }\n\n    deleteItem(index) {\n        const items = this.state.items\n        items.splice(index, 1)\n        this.setState({items})\n    }\n\n    renderItems() {\n        return this.state.items.map( ({ name }, index) => {\n            return (\n                <div key={index} id=\"delete-item-block\">\n                    <a id=\"delete-item-link\" onClick={ () => this.deleteItem(index) }>\n                        <img id=\"delete-item\" src={deleteItem} alt=\"Grabit\"/>\n                    </a>\n                    <p>{name}</p>\n                </div>\n                )\n        })\n    }\n\n    onSubmit(event) {\n        event.preventDefault()\n        this.props.mutate({\n            variables: {\n                 description: this.state.description,\n                 items: this.state.items,\n                 date: this.state.date,\n                 schedule: this.state.schedule,\n                 costRange: this.state.costRange,\n                 addressDeparture: this.state.addressDeparture,\n                 deliveryAddress: this.state.deliveryAddress\n            },\n            refetchQueries:[{query}]\n        }).then( () => {\n            this.setState({\n                description: \"\",\n                item: \"\",\n                items: [],\n                date: \"\",\n                schedule: \"ASAP\",\n                costRange: {from: 0, to: 0},\n                addressDeparture: \"\",\n                deliveryAddress: \"\"\n            })\n        }).then( () => {\n           const id = this.props.user.id \n           this.props.history.push(`/profile/${id}/requests`)\n        }).catch( (error) => {\n            console.log(error)\n        })\n    }\n\n    render() {\n            const isOrderRequest = true\n            const user = this.props.user\n            return (\n                <div>\n                    <TopBannerV1 isOrderRequest={isOrderRequest} user={user}/>\n                    <div className=\"order\">\n                        <div className=\"order-request-t\">\n                            <div className=\"order-request-top\">\n                                <h3>Order Request</h3>\n                            </div>\n                        </div>\n                        <div className=\"order-request-m\">\n                            <form className=\"order-request-main\" onSubmit={this.onSubmit.bind(this)}>\n                                <div className=\"order-request-main-left\">\n                                    <section className=\"input\">\n                                        <label>Describe your order</label>\n                                        <br/>\n                                        <textarea id=\"description\" type=\"text\" name=\"description\" \n                                                  value={this.state.description}\n                                                  onChange={event => this.setState({ description: event.target.value })}/>\n                                    </section>\n                                    <section>\n                                        <label>Items</label>\n                                        <br/>\n                                        <input id=\"items\" type=\"text\" name=\"items\" \n                                               value={this.state.item}\n                                               onChange={event => this.setState({ item: event.target.value })}/>\n                                        <a id=\"add-item-link\" onClick={this.addItem}>\n                                            <img id=\"add\" src={add} alt=\"Grabit\"/>\n                                        </a>\n                                    </section>\n                                    <section className=\"input\">\n                                        {this.renderItems()}\n                                    </section>\n                                    <section className=\"input\">\n                                        <label>Date</label>\n                                        <br/>\n                                        <input id=\"date\" type=\"date\" name=\"date\"\n                                               value={this.state.date}\n                                               onChange={event => this.setState({ date: event.target.value })}/>\n                                    </section>\n                                    <section className=\"input\">\n                                        <label>Schedule</label>\n                                        <br/>\n                                        <select id=\"schedule\" type=\"text\" name=\"schedule\"\n                                                value={this.state.schedule}\n                                                onChange={event => this.setState({ schedule: event.target.value })}>\n                                            <option value=\"ASAP\">ASAP</option>\n                                            <option value=\"TODAY\">TODAY</option>\n                                            <option value=\"THISWEEK\">THIS WEEK</option>\n                                        </select>\n                                    </section>\n                                    <section className=\"input\">\n                                        <label>Cost Range</label>\n                                        <br/>\n                                        <input id=\"cost-range-from\" type=\"number\" name=\"cost-range\" \n                                               value={this.state.costRange.from}\n                                               onChange={event => this.setState(prevState => ({ costRange:{from: event.target.value, to: prevState.costRange.to} }) )}/>\n                                        <label>To</label>\n                                        <input id=\"cost-range-to\" type=\"number\" name=\"cost-range\" \n                                               value={this.state.costRange.to}\n                                               onChange={event => this.setState(prevState => ({ costRange:{from: prevState.costRange.from, to: event.target.value} }) )}/>\n                                        <label>Dhs</label>\n                                    </section>\n                                </div>\n                                <div className=\"order-request-main-right\">\n                                    <section className=\"input\">\n                                        <br/>\n                                        <br />\n                                        <img id=\"oval-dsa\" src={ovalDsa} alt=\"Grabit\" />\n                                        <input id=\"address-departure\" type=\"text\" name=\"address-departure\"\n                                               value={this.state.addressDeparture}\n                                               onChange={event => this.setState({ addressDeparture: event.target.value })}/>\n                                        <br />\n                                        <img className=\"oval-address\" src={ovalAddress} alt=\"Grabit\"/>\n                                    </section>\n                                    <section className=\"input\">\n                                        <img className=\"oval-address\" src={ovalAddress} alt=\"Grabit\"/>\n                                        <br />\n                                        <img className=\"oval-address\" src={ovalAddress} alt=\"Grabit\"/>\n                                    </section>\n                                    <section className=\"input\">\n                                        <img className=\"oval-address\" src={ovalAddress} alt=\"Grabit\"/> \n                                        <br />\n                                        <img id=\"oval-asd\" src={ovalAsd} alt=\"Grabit\" />\n                                        <input id=\"delivery-address\" type=\"text\" name=\"delivery-address\" \n                                               value={this.state.deliveryAddress}\n                                               onChange={event => this.setState({ deliveryAddress: event.target.value })}/>\n                                    </section>\n                                    <section className=\"input\">\n                                        <div id=\"map\"></div>\n                                    </section>\n                                </div>\n                                <input id=\"order-request-submit-button\" type=\"submit\" value=\"Request\"/>\n                            </form>\n                        </div>\n                        <Footer/>\n                    </div>\n                </div>\n            )\n    }\n}\n\nconst mutation = gql`\n    mutation\n        CreateRequest(  $description: String!,\n                        $items: [CreateItemInput!]!,\n                        $date: String!,\n                        $schedule: String!,\n                        $costRange: CreateCostRangeInput!,\n                        $addressDeparture: String!,\n                        $deliveryAddress: String!\n                            ) {\n            createRequest(data: {   description: $description,\n                                    items: $items,\n                                    date: $date,\n                                    schedule: $schedule,\n                                    costRange: $costRange,\n                                    addressDeparture: $addressDeparture,\n                                    deliveryAddress: $deliveryAddress }\n                       ) {\n                                id\n                                description\n                                items {\n                                        id\n                                        name\n                                }\n                                status\n                                date\n                                schedule\n                                costRange {\n                                            id\n                                            from\n                                            to\n                                }\n                                addressDeparture\n                                deliveryAddress\n            }\n        }\n`\n\nexport default graphql(mutation)(OrderRequest)","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Footer/Footer.js",["119","120","121","122","123"],"import React from 'react';\nimport './Footer.css';\nimport { Link } from 'react-router-dom';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div className=\"profile-bottom\">\n                <ul>\n                    <li>\n                        <a href=\"\">2019 grabit</a>\n                    </li>\n                    <li>\n                        <a href=\"\">Terms</a>\n                    </li>\n                    <li>\n                        <a href=\"\">Privacy Policy</a>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n        \nexport default Footer;","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/TopBanner/TopBanner.js",["124"],"import React from 'react';\nimport './TopBanner.css';\nimport { Link } from 'react-router-dom';\nimport grabitIcon from './assets/grabit-icon.png';\nimport requestOrderIcon from './assets/request-order-icon.png';\nimport oval from './assets/oval.png';\n\n\nclass TopBanner extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n            const user = this.props.user;\n            const isProfile = this.props.isProfile;\n            const isOrderRequest = this.props.isOrderRequest;\n            \n            if(isProfile) {\n                return (\n                    <div className=\"top-banner-profile\">\n                        <Link to=\"/\" id=\"grabit-icon-box-profile\">\n                            <img src={grabitIcon} alt=\"Grabit\" />\n                        </Link>\n                        <Link to=\"/order-request\">\n                            <button id=\"request-an-order-button\">\n                                    <img src={requestOrderIcon} alt=\"Grabit\" />\n                                    Request an Order\n                            </button>\n                        </Link>\n                        <Link to={`/profile/${user.id}`} id=\"user-name-image-box-profile\">\n                            <p>{user.name}</p>\n                            <img id=\"user-image-profile\" src={oval} alt=\"Grabit\" />\n                        </Link>\n                    </div>\n                );\n            } else if(isOrderRequest) {\n                return(\n                    <div className=\"top-banner-order-request\">\n                        <Link to=\"/\" id=\"grabit-icon-box-order-request\">\n                            <img src={grabitIcon} alt=\"Grabit\" />\n                        </Link>\n                        <Link to={`/profile/${user.id}`} id=\"user-name-image-box-order-request\" >\n                            <p>{user.name}</p>\n                            <img id=\"user-image-order-request\" src={oval} alt=\"Grabit\" />\n                        </Link>\n                    </div>\n                );\n            }else {\n                return (\n                <div className=\"top-banner-sign-up\">\n                    <Link to=\"/\" id=\"grabit-icon-box-sign-up\">\n                        <img src={grabitIcon} alt=\"Grabit\" />\n                    </Link>\n                </div>\n                );\n            }\n    }\n}\n        \nexport default TopBanner;",["125","126"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Requests/Requests.js",["127","128"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/SideBar/SideBar.js",["129","130","131"],"import React from 'react'\nimport './SideBar.css'\nimport { NavLink } from 'react-router-dom'\nimport oval from './assets/oval.png'\nimport userDark from './assets/user-dark.png'\nimport userWhite from './assets/user-white.png'\nimport requestsDark from './assets/requests-dark.png'\nimport requestsWhite from './assets/requests-white.png'\nimport addressDark from './assets/address-dark.png'\nimport addressWhite from './assets/address-white.png'\n\nconst SideBar = props => {\n\n    const user = props.user\n    const url = props.url\n    const topMenu = (\n        <div className=\"main-left-top\">\n            <img id=\"user-image-min\" src={oval} alt=\"Grabit\"/>\n            <p>{user.name}</p>\n        </div>\n    )\n\n    return (\n        <div className=\"main-left\">\n            {topMenu}\n            <ul>\n                <NavLink to={`${url}/settings`} activeClassName=\"menu-option-clicked\">\n                    <li>\n                        <img id=\"user-dark\" src={userDark} alt=\"Grabit\"/>\n                        <p>Profile Settings</p>\n                    </li>\n                </NavLink>    \n                <NavLink to={`${url}/requests`} activeClassName=\"menu-option-clicked\">\n                    <li>\n                        <img id=\"requests-dark\" src={requestsDark} alt=\"Grabit\"/>\n                        <p>Requests</p>\n                    </li>\n                </NavLink>\n                <NavLink to={`${url}/address`} activeClassName=\"menu-option-clicked\">\n                    <li>\n                        <img id=\"address-dark\" src={addressDark} alt=\"Grabit\"/>\n                        <p>Address</p>\n                    </li>\n                </NavLink>\n            </ul>\n        </div>\n    )\n}\n\nexport default SideBar","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Address/Address.js",["132"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/ProfileSettings/ProfileSettings.js",["133","134"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Root/Root.js",["135","136","137","138"],"import React from 'react'\nimport './Root.css'\n\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\n\nimport { InMemoryCache, ApolloClient, createHttpLink } from '@apollo/client'\nimport { setContext } from '@apollo/client/link/context'\nimport { ApolloProvider } from 'react-apollo'\n\nimport App from '../App/App'\n\nconst httpLink = createHttpLink({\n    uri: \"http://localhost:4000\",\n    credentials: \"same-origin\"\n})\nlet token = \"\"\nif(localStorage.getItem('token')) {\n    token = localStorage.getItem('token')\n}\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    // const token = localStorage.getItem('token');\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\",\n      }\n    }\n})\nconst cache = new InMemoryCache({})\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache,\n    dataIdFromObject: o => o.id\n})\n\nclass Root extends React.Component {\n\n    constructor(props) {\n      super(props)\n    }\n\n    render() {\n        return (\n            <ApolloProvider client={client}>\n                <BrowserRouter>\n                    <App/>\n                </BrowserRouter>\n            </ApolloProvider>\n        )\n    }\n\n}\n\nexport default Root","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages-v1/Profile-v1/Profile-v1.js",["139"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/TopBanner-v1/TopBanner-v1.js",["140","141"],"import React from 'react'\nimport './TopBanner-v1.css'\nimport { Link } from 'react-router-dom'\nimport grabitIcon from './assets/grabit-icon.png'\nimport requestOrderIcon from './assets/request-order-icon.png'\nimport oval from './assets/oval.png'\n\nclass TopBannerV1 extends React.Component {\n    \n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n            const isProfile = this.props.isProfile\n            const isOrderRequest = this.props.isOrderRequest\n            const user = this.props.user\n\n            if(isProfile) {\n                return (\n                    <div className=\"top-banner-profile\">\n                        <Link to=\"/\" id=\"grabit-icon-box-profile\">\n                            <img src={grabitIcon} alt=\"Grabit\"/>\n                        </Link>\n                        <Link to=\"/order-request/new\">\n                            <button id=\"request-an-order-button\">\n                                    <img src={requestOrderIcon} alt=\"Grabit\"/>\n                                    Request an Order\n                            </button>\n                        </Link>\n                        <a id=\"user-name-image-box-profile\">\n                            <p>{user.name}</p>\n                            <img id=\"user-image-profile\" src={oval} alt=\"Grabit\"/>\n                        </a>\n                    </div>\n                )\n            } else if(isOrderRequest) {\n                return(\n                    <div className=\"top-banner-order-request\">\n                        <Link to=\"/\" id=\"grabit-icon-box-order-request\">\n                            <img src={grabitIcon} alt=\"Grabit\"/>\n                        </Link>\n                        <Link to={`/profile/${user.id}`} id=\"user-name-image-box-order-request\">\n                            <p>{user.name}</p>\n                            <img id=\"user-image-order-request\" src={oval} alt=\"Grabit\"/>\n                        </Link>\n                    </div>\n                )\n            }else {\n                return (\n                <div className=\"top-banner-sign-up\">\n                    <Link to=\"/\" id=\"grabit-icon-box-sign-up\">\n                        <img src={grabitIcon} alt=\"Grabit\"/>\n                    </Link>\n                </div>\n                )\n            }\n    }\n}\n\nexport default TopBannerV1","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/queries/fetchRequests.js",[],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/queries/fetchUserInfo.js",[],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/SignIn/SignIn.js",[],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/SignUp/SignUp.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":10,"column":17,"nodeType":"148","endLine":10,"endColumn":28},{"ruleId":"146","severity":1,"message":"147","line":25,"column":21,"nodeType":"148","endLine":25,"endColumn":32},{"ruleId":"146","severity":1,"message":"147","line":36,"column":21,"nodeType":"148","endLine":36,"endColumn":32},{"ruleId":"146","severity":1,"message":"147","line":109,"column":21,"nodeType":"148","endLine":109,"endColumn":32},{"ruleId":"146","severity":1,"message":"147","line":112,"column":21,"nodeType":"148","endLine":112,"endColumn":32},{"ruleId":"146","severity":1,"message":"147","line":115,"column":21,"nodeType":"148","endLine":115,"endColumn":32},{"ruleId":"142","replacedBy":"149"},{"ruleId":"144","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":79,"column":11,"nodeType":"153","messageId":"154","endLine":79,"endColumn":13},{"ruleId":"151","severity":1,"message":"155","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":14},{"ruleId":"151","severity":1,"message":"155","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"146","severity":1,"message":"156","line":54,"column":21,"nodeType":"148","endLine":54,"endColumn":87},{"ruleId":"146","severity":1,"message":"156","line":123,"column":41,"nodeType":"148","endLine":123,"endColumn":86},{"ruleId":"151","severity":1,"message":"155","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"157","severity":1,"message":"158","line":6,"column":5,"nodeType":"159","messageId":"160","endLine":8,"endColumn":6},{"ruleId":"146","severity":1,"message":"147","line":14,"column":25,"nodeType":"148","endLine":14,"endColumn":36},{"ruleId":"146","severity":1,"message":"147","line":17,"column":25,"nodeType":"148","endLine":17,"endColumn":36},{"ruleId":"146","severity":1,"message":"147","line":20,"column":25,"nodeType":"148","endLine":20,"endColumn":36},{"ruleId":"157","severity":1,"message":"158","line":10,"column":5,"nodeType":"159","messageId":"160","endLine":12,"endColumn":6},{"ruleId":"142","replacedBy":"161"},{"ruleId":"144","replacedBy":"162"},{"ruleId":"151","severity":1,"message":"155","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"157","severity":1,"message":"158","line":10,"column":5,"nodeType":"159","messageId":"160","endLine":12,"endColumn":6},{"ruleId":"151","severity":1,"message":"163","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":17},{"ruleId":"151","severity":1,"message":"164","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":21},{"ruleId":"151","severity":1,"message":"165","line":10,"column":8,"nodeType":"153","messageId":"154","endLine":10,"endColumn":20},{"ruleId":"151","severity":1,"message":"166","line":41,"column":15,"nodeType":"153","messageId":"154","endLine":41,"endColumn":22},{"ruleId":"151","severity":1,"message":"155","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"151","severity":1,"message":"167","line":37,"column":15,"nodeType":"153","messageId":"154","endLine":37,"endColumn":19},{"ruleId":"151","severity":1,"message":"168","line":4,"column":25,"nodeType":"153","messageId":"154","endLine":4,"endColumn":30},{"ruleId":"151","severity":1,"message":"169","line":4,"column":32,"nodeType":"153","messageId":"154","endLine":4,"endColumn":38},{"ruleId":"151","severity":1,"message":"170","line":4,"column":40,"nodeType":"153","messageId":"154","endLine":4,"endColumn":48},{"ruleId":"157","severity":1,"message":"158","line":40,"column":5,"nodeType":"159","messageId":"160","endLine":42,"endColumn":6},{"ruleId":"157","severity":1,"message":"158","line":15,"column":5,"nodeType":"159","messageId":"160","endLine":17,"endColumn":6},{"ruleId":"157","severity":1,"message":"158","line":10,"column":5,"nodeType":"159","messageId":"160","endLine":12,"endColumn":6},{"ruleId":"146","severity":1,"message":"156","line":31,"column":25,"nodeType":"148","endLine":31,"endColumn":61},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["171"],["172"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["171"],["172"],"'userWhite' is defined but never used.","'requestsWhite' is defined but never used.","'addressWhite' is defined but never used.","'address' is assigned a value but never used.","'user' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]