[{"/Users/gemography/Documents/projects/grabit-front/src/index.js":"1","/Users/gemography/Documents/projects/grabit-front/src/reportWebVitals.js":"2","/Users/gemography/Documents/projects/grabit-front/src/components/App/App.js":"3","/Users/gemography/Documents/projects/grabit-front/src/components/LandingPage/LandingPage.js":"4","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/index.js":"5","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/reportWebVitals.js":"6","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/App/App.js":"7","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/LandingPage/LandingPage.js":"8","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/Profile/Profile.js":"9","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/OrderRequest/OrderRequest.js":"10","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Footer/Footer.js":"11","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/TopBanner/TopBanner.js":"12","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Requests/Requests.js":"13","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/SideBar/SideBar.js":"14","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Address/Address.js":"15","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/ProfileSettings/ProfileSettings.js":"16","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Root/Root.js":"17","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages-v1/Profile-v1/Profile-v1.js":"18","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/TopBanner-v1/TopBanner-v1.js":"19","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/queries/fetchRequests.js":"20","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/queries/fetchUserInfo.js":"21","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/SignIn/SignIn.js":"22","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/SignUp/SignUp.js":"23"},{"size":520,"mtime":1608807282195,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1607949809325,"results":"26","hashOfConfig":"25"},{"size":277,"mtime":1608723977102,"results":"27","hashOfConfig":"25"},{"size":4783,"mtime":1608809944113,"results":"28","hashOfConfig":"25"},{"size":474,"mtime":1616511974487,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1607949808000,"results":"31","hashOfConfig":"30"},{"size":1615,"mtime":1617118703742,"results":"32","hashOfConfig":"30"},{"size":5009,"mtime":1617118827650,"results":"33","hashOfConfig":"30"},{"size":2063,"mtime":1615387538218,"results":"34","hashOfConfig":"30"},{"size":11362,"mtime":1617118677141,"results":"35","hashOfConfig":"30"},{"size":676,"mtime":1610017610104,"results":"36","hashOfConfig":"30"},{"size":2384,"mtime":1615472491295,"results":"37","hashOfConfig":"30"},{"size":1230,"mtime":1616668049004,"results":"38","hashOfConfig":"30"},{"size":1713,"mtime":1616671001924,"results":"39","hashOfConfig":"30"},{"size":2212,"mtime":1617039230027,"results":"40","hashOfConfig":"30"},{"size":3607,"mtime":1616667303098,"results":"41","hashOfConfig":"30"},{"size":1370,"mtime":1617118836163,"results":"42","hashOfConfig":"30"},{"size":1729,"mtime":1616671889732,"results":"43","hashOfConfig":"30"},{"size":2325,"mtime":1617118378054,"results":"44","hashOfConfig":"30"},{"size":585,"mtime":1616670207245,"results":"45","hashOfConfig":"30"},{"size":181,"mtime":1616667062937,"results":"46","hashOfConfig":"30"},{"size":3621,"mtime":1617118235367,"results":"47","hashOfConfig":"30"},{"size":5735,"mtime":1617118283650,"results":"48","hashOfConfig":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"wdmy2v",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1xa8tuc",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/gemography/Documents/projects/grabit-front/src/index.js",[],["105","106"],"/Users/gemography/Documents/projects/grabit-front/src/reportWebVitals.js",[],"/Users/gemography/Documents/projects/grabit-front/src/components/App/App.js",[],"/Users/gemography/Documents/projects/grabit-front/src/components/LandingPage/LandingPage.js",["107","108","109","110","111","112"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/index.js",[],["113","114"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/reportWebVitals.js",[],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/App/App.js",["115"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/LandingPage/LandingPage.js",["116"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/Profile/Profile.js",["117"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/OrderRequest/OrderRequest.js",["118","119","120"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Footer/Footer.js",["121","122","123","124","125"],"import React from 'react';\nimport './Footer.css';\nimport { Link } from 'react-router-dom';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div className=\"profile-bottom\">\n                <ul>\n                    <li>\n                        <a href=\"\">2019 grabit</a>\n                    </li>\n                    <li>\n                        <a href=\"\">Terms</a>\n                    </li>\n                    <li>\n                        <a href=\"\">Privacy Policy</a>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n        \nexport default Footer;","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/TopBanner/TopBanner.js",["126"],"import React from 'react';\nimport './TopBanner.css';\nimport { Link } from 'react-router-dom';\nimport grabitIcon from './assets/grabit-icon.png';\nimport requestOrderIcon from './assets/request-order-icon.png';\nimport oval from './assets/oval.png';\n\n\nclass TopBanner extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n            const user = this.props.user;\n            const isProfile = this.props.isProfile;\n            const isOrderRequest = this.props.isOrderRequest;\n            \n            if(isProfile) {\n                return (\n                    <div className=\"top-banner-profile\">\n                        <Link to=\"/\" id=\"grabit-icon-box-profile\">\n                            <img src={grabitIcon} alt=\"Grabit\" />\n                        </Link>\n                        <Link to=\"/order-request\">\n                            <button id=\"request-an-order-button\">\n                                    <img src={requestOrderIcon} alt=\"Grabit\" />\n                                    Request an Order\n                            </button>\n                        </Link>\n                        <Link to={`/profile/${user.id}`} id=\"user-name-image-box-profile\">\n                            <p>{user.name}</p>\n                            <img id=\"user-image-profile\" src={oval} alt=\"Grabit\" />\n                        </Link>\n                    </div>\n                );\n            } else if(isOrderRequest) {\n                return(\n                    <div className=\"top-banner-order-request\">\n                        <Link to=\"/\" id=\"grabit-icon-box-order-request\">\n                            <img src={grabitIcon} alt=\"Grabit\" />\n                        </Link>\n                        <Link to={`/profile/${user.id}`} id=\"user-name-image-box-order-request\" >\n                            <p>{user.name}</p>\n                            <img id=\"user-image-order-request\" src={oval} alt=\"Grabit\" />\n                        </Link>\n                    </div>\n                );\n            }else {\n                return (\n                <div className=\"top-banner-sign-up\">\n                    <Link to=\"/\" id=\"grabit-icon-box-sign-up\">\n                        <img src={grabitIcon} alt=\"Grabit\" />\n                    </Link>\n                </div>\n                );\n            }\n    }\n}\n        \nexport default TopBanner;",["127","128"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Requests/Requests.js",["129","130"],"import React from 'react'\nimport './Requests.css'\nimport { Link } from 'react-router-dom'\n\nimport { graphql } from 'react-apollo'\nimport query from '../../queries/fetchRequests'\n\nclass Requests extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    renderRequests() {\n        return this.props.data.myRequests.map( ({ id, description, status }) => {\n            return (    \n                        <div key={ id }>\n                            <li>\n                                { description } ----------- { status }\n                            </li>\n                            <br/>\n                        </div>\n            )\n        })\n    }\n\n    render() {\n        if( this.props.data.loading )\n            { \n                return <div>Loading.....</div>\n            }\n\n        return (\n            <div className=\"main-right\" >\n                <div className=\"main-right-top\">\n                    <h3>Requests</h3>\n                </div>\n                <div className=\"main-right-form\">\n                    <ul>\n                        { this.renderRequests() }\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default graphql(query)(Requests)","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/SideBar/SideBar.js",["131","132","133"],"import React from 'react'\nimport './SideBar.css'\nimport { NavLink } from 'react-router-dom'\nimport oval from './assets/oval.png'\nimport userDark from './assets/user-dark.png'\nimport userWhite from './assets/user-white.png'\nimport requestsDark from './assets/requests-dark.png'\nimport requestsWhite from './assets/requests-white.png'\nimport addressDark from './assets/address-dark.png'\nimport addressWhite from './assets/address-white.png'\n\nconst SideBar = props => {\n\n    const user = props.user\n    const url = props.url\n    const topMenu = (\n        <div className=\"main-left-top\">\n            <img id=\"user-image-min\" src={oval} alt=\"Grabit\"/>\n            <p>{user.name}</p>\n        </div>\n    )\n\n    return (\n        <div className=\"main-left\">\n            {topMenu}\n            <ul>\n                <NavLink to={`${url}/settings`} activeClassName=\"menu-option-clicked\">\n                    <li>\n                        <img id=\"user-dark\" src={userDark} alt=\"Grabit\"/>\n                        <p>Profile Settings</p>\n                    </li>\n                </NavLink>    \n                <NavLink to={`${url}/requests`} activeClassName=\"menu-option-clicked\">\n                    <li>\n                        <img id=\"requests-dark\" src={requestsDark} alt=\"Grabit\"/>\n                        <p>Requests</p>\n                    </li>\n                </NavLink>\n                <NavLink to={`${url}/address`} activeClassName=\"menu-option-clicked\">\n                    <li>\n                        <img id=\"address-dark\" src={addressDark} alt=\"Grabit\"/>\n                        <p>Address</p>\n                    </li>\n                </NavLink>\n            </ul>\n        </div>\n    )\n}\n\nexport default SideBar","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Address/Address.js",["134"],"import React from 'react'\nimport './Address.css'\n\nimport gql from 'graphql-tag'\nimport { graphql } from 'react-apollo'\n\nclass Address extends React.Component {\n\n    constructor(props) {\n        super(props)\n        if(this.props.address) {\n            this.state = {\n                address: this.props.address\n            }\n        }else {\n            this.state = {\n                address: \"\"\n            }\n        }\n\n    }\n\n    onSubmit(event) {\n\n        event.preventDefault()\n\n        this.props.mutate({\n            variables: {\n                address: this.state.address\n            }\n\n        }).catch( (error) => {\n\n            console.log(error)\n            \n        })\n\n    }\n\n    render() {\n\n        const address = this.props.address\n\n        return (\n            <div className=\"main-right\">\n                <div className=\"main-right-top\">\n                    <h3>Address</h3>\n                </div>\n                <div id=\"address-form\" className=\"main-right-form\">\n                    <div className=\"main-right-form-inputs\">\n                        <form onSubmit={this.onSubmit.bind(this)}>\n                            <section className=\"input\">\n                                <label>Address</label>\n                                <br/>\n                                <input type=\"text\" name=\"address\" id=\"address\" \n                                       value={this.state.address}\n                                       onChange={event => this.setState({ address: event.target.value })}/>\n                            </section>\n                            <br/>\n                            <button id=\"address-button\" type=\"submit\">Update</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mutation = gql`\n    mutation\n        UpdateUser( $address: String\n                            ) {\n            updateUser(data: {address: $address}\n                       ) {\n                            id\n                            name\n                            email\n                            phone\n                            address\n            }\n        }\n`\n\nexport default graphql(mutation)(Address)","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/ProfileSettings/ProfileSettings.js",["135","136"],"import React from 'react'\nimport './ProfileSettings.css'\nimport { Link } from 'react-router-dom'\nimport oval from './assets/oval.png'\n\nimport gql from 'graphql-tag'\nimport { graphql } from 'react-apollo'\n\nclass ProfileSettings extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: this.props.user.name,\n            email: this.props.user.email,\n            phone: this.props.user.phone\n        }\n\n    }\n\n    onSubmit(event) {\n        event.preventDefault()\n\n\n\n        this.props.mutate({\n            variables: {\n                name: this.state.name,\n                email: this.state.email,\n                phone: this.state.phone\n            }\n        }).catch( (error) => {\n            console.log(error)\n        })\n\n    }\n\n    render() {\n        const user = this.props.user\n\n        return (\n            <div className=\"main-right\" >\n                <div className=\"main-right-top\">\n                    <h3>Profile Settings</h3>\n                </div>\n                <div className=\"main-right-form\">\n                    <div className=\"main-right-form-inputs\">\n                         <form onSubmit={this.onSubmit.bind(this)}>\n                            <section className=\"input\">\n                                <label>First & Last Name</label>\n                                <br/>\n                                <input type=\"text\" name=\"name\" id=\"name\" \n                                        value={this.state.name}\n                                        onChange={event => this.setState({ name: event.target.value })}/>\n                            </section>\n                            <section className=\"input\">\n                                <label>Email</label>\n                                <br/>\n                                <input type=\"email\" name=\"email\" id=\"email\" \n                                        value={this.state.email}\n                                        onChange={event => this.setState({ email: event.target.value })}/>\n                            </section>\n                            <section className=\"input\">\n                                <label>Phone</label>\n                                <br/>\n                                <input type=\"text\" name=\"phone\" id=\"phone\" \n                                        value={this.state.phone}\n                                        onChange={event => this.setState({ phone: event.target.value })}/>\n                            </section>\n                            <br/>\n                            <button type=\"submit\">Update</button>\n                        </form>    \n                    </div>\n                    <div className=\"main-right-form-image\">\n                        <img src={oval} alt=\"Grabit\" />\n                        <br/>\n                        <button id=\"upload\" >Upload</button>\n                        <button id=\"remove\" >Remove</button>\n                    </div>\n                </div>\n        </div>\n        )\n    }\n}\n\nconst mutation = gql`\n    mutation\n        UpdateUser( $name: String,\n                    $email: String,\n                    $phone: String\n                            ) {\n            updateUser(data: {  name: $name,\n                                email: $email,\n                                phone: $phone }\n                       ) {\n                            id\n                            name\n                            email\n                            phone\n                            address\n            }\n        }\n`\n\nexport default graphql(mutation)(ProfileSettings)","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/Root/Root.js",["137","138","139","140"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages-v1/Profile-v1/Profile-v1.js",["141"],"import React from 'react'\nimport './Profile-v1.css'\n\nimport TopBannerV1 from '../../TopBanner-v1/TopBanner-v1'\nimport SideBar from '../../SideBar/SideBar'\nimport ProfileSettings from '../../ProfileSettings/ProfileSettings'\nimport Requests from '../../Requests/Requests'\nimport Address from '../../Address/Address'\nimport Footer from '../../Footer/Footer'\n\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\nclass ProfileV1 extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n    }\n\n    render() {\n\n        const isProfile = true\n        const url = this.props.match.url\n        const user = this.props.user\n\n        return (\n            <div className=\"profile\">\n                <TopBannerV1 isProfile={isProfile} user={user}/>\n                <div className=\"profile-main\">\n                    <SideBar url={url} user={user}/>\n                    <Switch>\n                        <Route exact path={`${url}/settings`} render={ props => {\n                            return <ProfileSettings {...props}\n                                                user={user}/>              \n                        }}/>\n                        <Route path={`${url}/requests`} render={ props => {\n                            return <Requests {...props} />\n                        }}/>\n                        <Route path={`${url}/address`} render={ props => {\n                            return <Address {...props} \n                                         address={user.address}/>\n                        }}/>\n                        <Redirect to={`${url}/settings`}/>\n                    </Switch>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n\n}\n\nexport default ProfileV1","/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/TopBanner-v1/TopBanner-v1.js",["142","143"],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/queries/fetchRequests.js",[],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/queries/fetchUserInfo.js",[],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/SignIn/SignIn.js",[],"/Users/marouaneelkachchani/Documents/projects/grabitProject/grabit-front/src/components/pages/SignUp/SignUp.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":10,"column":17,"nodeType":"150","endLine":10,"endColumn":28},{"ruleId":"148","severity":1,"message":"149","line":25,"column":21,"nodeType":"150","endLine":25,"endColumn":32},{"ruleId":"148","severity":1,"message":"149","line":36,"column":21,"nodeType":"150","endLine":36,"endColumn":32},{"ruleId":"148","severity":1,"message":"149","line":109,"column":21,"nodeType":"150","endLine":109,"endColumn":32},{"ruleId":"148","severity":1,"message":"149","line":112,"column":21,"nodeType":"150","endLine":112,"endColumn":32},{"ruleId":"148","severity":1,"message":"149","line":115,"column":21,"nodeType":"150","endLine":115,"endColumn":32},{"ruleId":"144","replacedBy":"151"},{"ruleId":"146","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":16,"column":3,"nodeType":"155","messageId":"156","endLine":18,"endColumn":4},{"ruleId":"153","severity":1,"message":"154","line":19,"column":5,"nodeType":"155","messageId":"156","endLine":21,"endColumn":6},{"ruleId":"157","severity":1,"message":"158","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":14},{"ruleId":"157","severity":1,"message":"158","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"161","line":54,"column":21,"nodeType":"150","endLine":54,"endColumn":87},{"ruleId":"148","severity":1,"message":"161","line":123,"column":41,"nodeType":"150","endLine":123,"endColumn":86},{"ruleId":"157","severity":1,"message":"158","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":6,"column":5,"nodeType":"155","messageId":"156","endLine":8,"endColumn":6},{"ruleId":"148","severity":1,"message":"149","line":14,"column":25,"nodeType":"150","endLine":14,"endColumn":36},{"ruleId":"148","severity":1,"message":"149","line":17,"column":25,"nodeType":"150","endLine":17,"endColumn":36},{"ruleId":"148","severity":1,"message":"149","line":20,"column":25,"nodeType":"150","endLine":20,"endColumn":36},{"ruleId":"153","severity":1,"message":"154","line":10,"column":5,"nodeType":"155","messageId":"156","endLine":12,"endColumn":6},{"ruleId":"144","replacedBy":"162"},{"ruleId":"146","replacedBy":"163"},{"ruleId":"157","severity":1,"message":"158","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":10,"column":5,"nodeType":"155","messageId":"156","endLine":12,"endColumn":6},{"ruleId":"157","severity":1,"message":"164","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":17},{"ruleId":"157","severity":1,"message":"165","line":8,"column":8,"nodeType":"159","messageId":"160","endLine":8,"endColumn":21},{"ruleId":"157","severity":1,"message":"166","line":10,"column":8,"nodeType":"159","messageId":"160","endLine":10,"endColumn":20},{"ruleId":"157","severity":1,"message":"167","line":42,"column":15,"nodeType":"159","messageId":"160","endLine":42,"endColumn":22},{"ruleId":"157","severity":1,"message":"158","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":14},{"ruleId":"157","severity":1,"message":"168","line":39,"column":15,"nodeType":"159","messageId":"160","endLine":39,"endColumn":19},{"ruleId":"157","severity":1,"message":"169","line":4,"column":25,"nodeType":"159","messageId":"160","endLine":4,"endColumn":30},{"ruleId":"157","severity":1,"message":"170","line":4,"column":32,"nodeType":"159","messageId":"160","endLine":4,"endColumn":38},{"ruleId":"157","severity":1,"message":"171","line":4,"column":40,"nodeType":"159","messageId":"160","endLine":4,"endColumn":48},{"ruleId":"153","severity":1,"message":"154","line":40,"column":5,"nodeType":"155","messageId":"156","endLine":42,"endColumn":6},{"ruleId":"153","severity":1,"message":"154","line":15,"column":5,"nodeType":"155","messageId":"156","endLine":18,"endColumn":6},{"ruleId":"153","severity":1,"message":"154","line":10,"column":5,"nodeType":"155","messageId":"156","endLine":12,"endColumn":6},{"ruleId":"148","severity":1,"message":"161","line":31,"column":25,"nodeType":"150","endLine":31,"endColumn":61},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["172"],["173"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["172"],["173"],"'userWhite' is defined but never used.","'requestsWhite' is defined but never used.","'addressWhite' is defined but never used.","'address' is assigned a value but never used.","'user' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]